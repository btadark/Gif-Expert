{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6LAiCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACE,0BACEC,SAXiB,SAAAC,GACnBA,EAAEC,iBAEuB,KAAtBJ,EAAWK,SACZP,GAAe,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,OAC7CL,EAAc,OAQd,2BACEM,KAAK,OACLC,MAAOR,EACPS,SApBoB,SAAAN,GACxBF,EAAcE,EAAEO,OAAOF,Y,uBCNdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,gDACgCC,UAAUH,GAD1C,+DAEHI,MAAMF,GAFH,cAEfG,EAFe,gBAGAA,EAAIC,OAHJ,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAThB,kBAYdM,GAZc,4CAAH,sDCYLO,EAZK,SAAC,GAAW,IAAVL,EAAS,EAATA,IAEbE,EAAeF,EAAfE,MAAOV,EAAQQ,EAARR,IAEd,OACE,yBAAKc,UAAU,QACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCmBKO,EAxBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEdb,mBAAS,CACjCoB,KAAM,GACNa,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAM,SAAAC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGd,CAACpB,IAEGqB,EDdyBK,CAAa1B,GAAjCa,EAFkB,EAEvBN,KAAca,EAFS,EAETA,QAErB,OACE,oCACE,wBAAIJ,UAAU,+CAA+ChB,GAE3DoB,GAAW,uCACb,yBAAKJ,UAAU,+CAEXH,EAAOJ,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,CACEiB,IAAKjB,EAAIC,GACTD,IAAKA,UEQJkB,EAtBM,WAAO,IAAD,EAEWzC,mBAAS,IAFpB,mBAElBO,EAFkB,KAENR,EAFM,KAIzB,OACE,oCACE,4CACA,kBAAC,EAAD,CACEA,cAAeA,IAEjB,6BAEEQ,EAAWe,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACE2B,IAAK3B,EACLA,SAAUA,S,YCXtB6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7bce3a02.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim() !== '') {\r\n      setCategories( categories => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={ handleSubmit }\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category) => {\r\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fIpbFSRBW1mKAfDDJHNO7VbULvkUV0Ak`;\r\n  const res = await fetch(url);\r\n  const {data} = await res.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    }\r\n  })\r\n  return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({img}) => {\r\n\r\n  const {title, url } = img;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGif';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n  const {data:images , loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"card-grid animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      { loading && <p>Cargando</p> }\r\n      <div className=\"card-grid animate__animated animate__fadeIn\">\r\n        \r\n        { images.map( img => (\r\n            <GifGridItem \r\n              key={img.id}\r\n              img={img}\r\n            />\r\n          ))\r\n        }\r\n        \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then( imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      });\r\n  }, [category])\r\n\r\n  return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  \r\n  const [categories, setCategories] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory\r\n        setCategories={setCategories}\r\n      />\r\n      <hr/>\r\n\r\n      { categories.map( category => (\r\n          <GifGrid \r\n            key={category}\r\n            category={category}\r\n          />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport 'animate.css';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}